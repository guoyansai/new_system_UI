{"id":"components/CP_DPSContent.vue","dependencies":[{"name":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\package.json","includedInParent":true,"mtime":1654767605526},{"name":"_css_loader","parent":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\src\\components\\CP_DPSContent.vue","resolved":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\node_modules\\parcel-bundler\\src\\builtins\\css-loader.js"},{"name":"vue-hot-reload-api","parent":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\src\\components\\CP_DPSContent.vue","resolved":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\node_modules\\vue-hot-reload-api\\dist\\index.js"},{"name":"vue","parent":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\src\\components\\CP_DPSContent.vue","resolved":"C:\\Users\\CHENG\\.node-red\\uibuilder\\navbar\\node_modules\\vue\\dist\\vue.runtime.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"cpDPSContent\",\n  props: {\n    isSelected: {\n      type: Boolean\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    uibuilder.onChange(\"msg\", function (newMsg) {\n      console.info(\"Msg received from Node-RED server in Home:\", newMsg);\n    });\n  },\n  methods: {}\n};\nexports.default = _default;\n        var $9c24fb = exports.default || module.exports;\n      \n      if (typeof $9c24fb === 'function') {\n        $9c24fb = $9c24fb.options;\n      }\n    \n        /* template */\n        Object.assign($9c24fb, (function () {\n          var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.isSelected\n    ? _c(\n        \"div\",\n        [\n          _vm._t(\"default\"),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-primary\",\n              attrs: {\n                type: \"button\",\n                \"data-toggle\": \"modal\",\n                \"data-target\": \"#CP_PointsList\",\n              },\n            },\n            [_vm._v(\"\\n        + Add\\n    \")]\n          ),\n          _vm._v(\" \"),\n          _c(\"table\", { staticClass: \"table table-striped\" }, [\n            _vm._m(0),\n            _vm._v(\" \"),\n            _c(\n              \"tbody\",\n              { attrs: { id: \"tobdy\" } },\n              _vm._l(_vm.currentPoints, function (item, key) {\n                return _c(\n                  \"tr\",\n                  {\n                    key: key,\n                    on: {\n                      click: function ($event) {\n                        return _vm.getPointItem(item)\n                      },\n                    },\n                  },\n                  [\n                    _c(\"td\", [_vm._v(_vm._s(key + 1))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(item.DI_name))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(item.digital_text))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(item.digital_type))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _c(\n                        \"svg\",\n                        {\n                          staticClass: \"feather feather-edit\",\n                          attrs: {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            width: \"24\",\n                            height: \"24\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"blue\",\n                            \"stroke-width\": \"2\",\n                            \"stroke-linecap\": \"round\",\n                            \"stroke-linejoin\": \"round\",\n                            \"data-toggle\": \"modal\",\n                            \"data-target\": \"#update_model\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.UpdatePoint(item, $event)\n                            },\n                          },\n                        },\n                        [\n                          _c(\"path\", {\n                            attrs: {\n                              d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"path\", {\n                            attrs: {\n                              d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\",\n                            },\n                          }),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"svg\",\n                        {\n                          staticClass: \"feather feather-x\",\n                          attrs: {\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            width: \"24\",\n                            height: \"24\",\n                            viewBox: \"0 0 24 24\",\n                            fill: \"none\",\n                            stroke: \"red\",\n                            \"stroke-width\": \"2\",\n                            \"stroke-linecap\": \"round\",\n                            \"stroke-linejoin\": \"round\",\n                            id: \"deleteBtn\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.deletePoint(item, $event)\n                            },\n                          },\n                        },\n                        [\n                          _c(\"line\", {\n                            attrs: { x1: \"18\", y1: \"6\", x2: \"6\", y2: \"18\" },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"line\", {\n                            attrs: { x1: \"6\", y1: \"6\", x2: \"18\", y2: \"18\" },\n                          }),\n                        ]\n                      ),\n                    ]),\n                  ]\n                )\n              }),\n              0\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"modal fade\",\n              attrs: {\n                id: \"CP_PointsList\",\n                tabindex: \"-1\",\n                \"aria-labelledby\": \"exampleModalLabel\",\n                \"aria-hidden\": \"true\",\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"modal-dialog\" }, [\n                _c(\"div\", { staticClass: \"modal-content\" }, [\n                  _vm._m(1),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"modal-body\" }, [\n                    _c(\"form\", [\n                      _c(\"div\", { staticClass: \"form-group row\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"col-sm-3 col-form-label\",\n                            attrs: { for: \"input_name\" },\n                          },\n                          [_vm._v(\"Name\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-sm-8\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.Physical_DI.name,\n                                expression: \"Physical_DI.name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"text\", id: \"input_name\" },\n                            domProps: { value: _vm.Physical_DI.name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.Physical_DI,\n                                  \"name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"form-group row\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"col-sm-3 col-form-label\",\n                            attrs: { for: \"input_digital\" },\n                          },\n                          [_vm._v(\"Digital Text\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-sm-8\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.Physical_DI.digital,\n                                expression: \"Physical_DI.digital\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"text\", id: \"input_digital\" },\n                            domProps: { value: _vm.Physical_DI.digital },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.Physical_DI,\n                                  \"digital\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"fieldset\", { staticClass: \"form-group row\" }, [\n                        _c(\n                          \"legend\",\n                          {\n                            staticClass:\n                              \"col-form-label col-sm-3 float-sm-left pt-0\",\n                          },\n                          [_vm._v(\"Type\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-sm-8\" }, [\n                          _c(\"div\", { staticClass: \"form-check\" }, [\n                            _c(\"span\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.Physical_DI.type,\n                                    expression: \"Physical_DI.type\",\n                                    modifiers: { trim: true },\n                                  },\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  name: \"type\",\n                                  id: \"type_sps\",\n                                  value: \"SPS\",\n                                },\n                                domProps: {\n                                  checked: _vm._q(_vm.Physical_DI.type, \"SPS\"),\n                                },\n                                on: {\n                                  change: function ($event) {\n                                    return _vm.$set(\n                                      _vm.Physical_DI,\n                                      \"type\",\n                                      \"SPS\"\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: { for: \"type_sps\" },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                        SPS\\n                                    \"\n                                  ),\n                                ]\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"span\", { staticClass: \"radio_second\" }, [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.Physical_DI.type,\n                                    expression: \"Physical_DI.type\",\n                                    modifiers: { trim: true },\n                                  },\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  name: \"type\",\n                                  id: \"type_dps\",\n                                  value: \"DPS\",\n                                },\n                                domProps: {\n                                  checked: _vm._q(_vm.Physical_DI.type, \"DPS\"),\n                                },\n                                on: {\n                                  change: function ($event) {\n                                    return _vm.$set(\n                                      _vm.Physical_DI,\n                                      \"type\",\n                                      \"DPS\"\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: { for: \"type_dps\" },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                    DPS\\n                                    \"\n                                  ),\n                                ]\n                              ),\n                            ]),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"modal-footer\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-secondary\",\n                            attrs: { type: \"button\", \"data-dismiss\": \"modal\" },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                    Close\\n                                \"\n                            ),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-primary\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.addPoint },\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                    Save\\n                                \"\n                            ),\n                          ]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                {\n                  staticClass: \"modal fade\",\n                  attrs: {\n                    id: \"update_model\",\n                    tabindex: \"-1\",\n                    \"aria-labelledby\": \"exampleModalLabel\",\n                    \"aria-hidden\": \"true\",\n                  },\n                },\n                [\n                  _c(\"div\", { staticClass: \"modal-dialog\" }, [\n                    _c(\"div\", { staticClass: \"modal-content\" }, [\n                      _vm._m(2),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"modal-body\" }, [\n                        _c(\"form\", [\n                          _vm._m(3),\n                          _vm._v(\" \"),\n                          _vm._m(4),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"modal-footer\" }, [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-secondary\",\n                                attrs: {\n                                  type: \"button\",\n                                  \"data-dismiss\": \"modal\",\n                                },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                    Close\\n                                \"\n                                ),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-primary\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.addPoint },\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                    Save\\n                                \"\n                                ),\n                              ]\n                            ),\n                          ]),\n                        ]),\n                      ]),\n                    ]),\n                  ]),\n                ]\n              ),\n            ]\n          ),\n        ],\n        2\n      )\n    : _vm._e()\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", { staticClass: \"thead-dark\" }, [\n      _c(\"tr\", [\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"No.\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Name\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Digital Type\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Digital Text\")]),\n        _vm._v(\" \"),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Actions\")]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"modal-header\" }, [\n      _c(\"h5\", { staticClass: \"modal-title\" }, [\n        _vm._v(\"Create Physical Digital Input\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"close\",\n          attrs: {\n            type: \"button\",\n            \"data-dismiss\": \"modal\",\n            \"aria-label\": \"Close\",\n          },\n        },\n        [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"×\")])]\n      ),\n    ])\n  },\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"modal-header\" }, [\n      _c(\"h5\", { staticClass: \"modal-title\" }, [\n        _vm._v(\"Update Physical Digital Input\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"close\",\n          attrs: {\n            type: \"button\",\n            \"data-dismiss\": \"modal\",\n            \"aria-label\": \"Close\",\n          },\n        },\n        [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"×\")])]\n      ),\n    ])\n  },\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"form-group row\" }, [\n      _c(\n        \"label\",\n        {\n          staticClass: \"col-sm-3 col-form-label\",\n          attrs: { for: \"input_name\" },\n        },\n        [_vm._v(\"Name\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"col-sm-8\" }, [\n        _c(\"input\", {\n          staticClass: \"form-control\",\n          attrs: { type: \"text\", id: \"input_name\" },\n        }),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"form-group row\" }, [\n      _c(\n        \"label\",\n        {\n          staticClass: \"col-sm-3 col-form-label\",\n          attrs: { for: \"input_digital\" },\n        },\n        [_vm._v(\"Digital Text\")]\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"col-sm-8\" }, [\n        _c(\"input\", {\n          staticClass: \"form-control\",\n          attrs: { type: \"text\", id: \"input_digital\" },\n        }),\n      ]),\n    ])\n  },\n]\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: \"data-v-9c24fb\",\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$9c24fb', $9c24fb);\n          } else {\n            api.reload('$9c24fb', $9c24fb);\n          }\n        }\n\n        \n        var reloadCSS = require('_css_loader');\n        module.hot.dispose(reloadCSS);\n        module.hot.accept(reloadCSS);\n      \n      }\n    })();"},"sourceMaps":{"js":{"mappings":[{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":230,"column":15}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":227,"column":0},"generated":{"line":231,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":227,"column":0},"generated":{"line":231,"column":2}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":227,"column":0},"generated":{"line":231,"column":6}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":227,"column":0},"generated":{"line":231,"column":8}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":231,"column":22}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":229,"column":0},"generated":{"line":232,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":229,"column":0},"generated":{"line":232,"column":2}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":229,"column":0},"generated":{"line":232,"column":7}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":229,"column":0},"generated":{"line":232,"column":9}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":230,"column":0},"generated":{"line":233,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":230,"column":0},"generated":{"line":233,"column":4}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":230,"column":0},"generated":{"line":233,"column":14}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":230,"column":0},"generated":{"line":233,"column":16}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":231,"column":0},"generated":{"line":234,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":231,"column":0},"generated":{"line":234,"column":6}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":231,"column":0},"generated":{"line":234,"column":10}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":231,"column":0},"generated":{"line":234,"column":12}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":230,"column":0},"generated":{"line":235,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":229,"column":0},"generated":{"line":236,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":236,"column":3}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":237,"column":0},"generated":{"line":237,"column":2}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":237,"column":6}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":237,"column":0},"generated":{"line":237,"column":24}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":238,"column":0},"generated":{"line":238,"column":11}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":238,"column":0},"generated":{"line":238,"column":13}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":241,"column":0},"generated":{"line":239,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":239,"column":3}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":244,"column":0},"generated":{"line":240,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":244,"column":0},"generated":{"line":240,"column":2}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":240,"column":9}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":244,"column":0},"generated":{"line":240,"column":30}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":4}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":13}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":14}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":22}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":23}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":28}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":30}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":40}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":46}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":241,"column":48}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":6}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":13}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":14}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":18}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":19}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":63}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":65}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":247,"column":0},"generated":{"line":242,"column":71}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":248,"column":0},"generated":{"line":243,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":246,"column":0},"generated":{"line":243,"column":5}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":249,"column":0},"generated":{"line":244,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":244,"column":3}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":252,"column":0},"generated":{"line":245,"column":0}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":252,"column":0},"generated":{"line":245,"column":2}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":252,"column":0},"generated":{"line":245,"column":9}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":252,"column":0},"generated":{"line":245,"column":11}},{"source":"components/CP_DPSContent.vue","name":null,"original":{"line":226,"column":0},"generated":{"line":246,"column":0}}],"sources":{"components/CP_DPSContent.vue":"<template>\n    <div v-if=\"isSelected\">\n      <slot></slot>\n\n        <!-- Button trigger modal -->\n        <button\n            type=\"button\"\n            class=\"btn btn-primary\"\n            data-toggle=\"modal\"\n            data-target=\"#CP_PointsList\"\n        >\n            + Add\n        </button>\n        <!-- :class=\"{active: key == itemKey}\" -->\n        <table class=\"table table-striped\">\n            <thead class=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">No.</th>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Digital Type</th>\n                    <th scope=\"col\">Digital Text</th>\n                    <th scope=\"col\">Actions</th>\n                </tr>\n            </thead>\n            <tbody id=\"tobdy\">\n                <tr\n                    v-for=\"(item, key) in currentPoints\"\n                    :key=\"key\"\n                    @click=\"getPointItem(item)\"\n                >\n                    <td>{{ key + 1 }}</td>\n                    <td>{{ item.DI_name }}</td>\n                    <td>{{ item.digital_text }}</td>\n                    <td>{{ item.digital_type }}</td>\n                   <td>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"blue\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-edit\" data-toggle=\"modal\" data-target=\"#update_model\" @click=\"UpdatePoint(item, $event)\"\n                        >\n                            <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path>\n                            <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path>\n                        </svg>\n                    \n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"red\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-x\" id=\"deleteBtn\" @click=\"deletePoint(item,$event)\">\n                            <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                            <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                        </svg>\n                    </td>\n                    \n                </tr>\n            </tbody>\n        </table>\n\n        <!--Add Modal -->\n        <div\n            class=\"modal fade\"\n            id=\"CP_PointsList\"\n            tabindex=\"-1\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n        >\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Create Physical Digital Input</h5>\n                        <button\n                            type=\"button\"\n                            class=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                       <form>\n                           <div class=\"form-group row\">\n                                <label for=\"input_name\" class=\"col-sm-3 col-form-label\">Name</label>\n                                <div class=\"col-sm-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"input_name\" v-model=\"Physical_DI.name\">\n                                </div>\n                            </div>\n\n                             <div class=\"form-group row\">\n                                <label for=\"input_digital\" class=\"col-sm-3 col-form-label\" >Digital Text</label>\n                                <div class=\"col-sm-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"input_digital\" v-model=\"Physical_DI.digital\">\n                                </div>\n                            </div>\n\n                             <fieldset class=\"form-group row\">\n                                <legend class=\"col-form-label col-sm-3 float-sm-left pt-0\">Type</legend>\n                                <div class=\"col-sm-8\">\n                                <div class=\"form-check\">\n                                    <span>\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"type_sps\" value=\"SPS\" v-model.trim=\"Physical_DI.type\">\n                                        <label class=\"form-check-label\" for=\"type_sps\">\n                                            SPS\n                                        </label>\n                                    </span>\n\n                                    <span class=\"radio_second\">\n                                        <input class=\"form-check-input\" type=\"radio\" name=\"type\" id=\"type_dps\" value=\"DPS\" v-model.trim=\"Physical_DI.type\">\n                                        <label class=\"form-check-label\" for=\"type_dps\">\n                                        DPS\n                                        </label>\n                                    </span>\n\n                                </div>\n                              \n                                \n                                </div>\n                            </fieldset>\n\n                            <div class=\"modal-footer\">\n                                    <button\n                                        type=\"button\"\n                                        class=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                    >\n                                        Close\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        class=\"btn btn-primary\"\n                                        @click=\"addPoint\"\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n\n                       </form>\n\n\n\n                        \n\n                </div>\n            </div>\n        </div>\n        <!-- Update Modal -->\n\n\n          <div\n            class=\"modal fade\"\n            id=\"update_model\"\n            tabindex=\"-1\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n        >\n            <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                        <h5 class=\"modal-title\">Update Physical Digital Input</h5>\n                        <button\n                            type=\"button\"\n                            class=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div class=\"modal-body\">\n                       <form>\n                           <div class=\"form-group row\">\n                                <label for=\"input_name\" class=\"col-sm-3 col-form-label\">Name</label>\n                                <div class=\"col-sm-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"input_name\" >\n                                </div>\n                            </div>\n\n                             <div class=\"form-group row\">\n                                <label for=\"input_digital\" class=\"col-sm-3 col-form-label\" >Digital Text</label>\n                                <div class=\"col-sm-8\">\n                                <input type=\"text\" class=\"form-control\" id=\"input_digital\">\n                                </div>\n                            </div>\n\n                            \n\n                            <div class=\"modal-footer\">\n                                    <button\n                                        type=\"button\"\n                                        class=\"btn btn-secondary\"\n                                        data-dismiss=\"modal\"\n                                    >\n                                        Close\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        class=\"btn btn-primary\"\n                                        @click=\"addPoint\"\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n\n                       </form>\n\n\n\n                        \n\n                </div>\n            </div>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"cpDPSContent\",\n  \n  props:{\n    isSelected:{\n      type: Boolean\n    }\n  },\n\n\n\n  data() {\n    return {\n    \n    };\n  },\n\n\n  mounted() {\n   \n    uibuilder.onChange(\"msg\", (newMsg) => {\n      console.info(\"Msg received from Node-RED server in Home:\", newMsg);\n    });\n  },\n\n\n  methods: {\n   \n  },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n};\n</script>\n\n<style scoped>\n</style>"},"lineCount":null}},"error":null,"hash":"86dd2067701843d5ae89d89e280605c4","cacheData":{"env":{}}}